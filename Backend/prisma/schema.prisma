generator client {
  provider = "prisma-client-js"
}
 
datasource db {
  //provider = "postgresql"
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model CadHierarquia {
  id    String @id @default(uuid())
  nome  String @unique
  cadastroFuncionarios CadastroFuncionarios[]

  @@map("cadastro_hierarquia")
}

model CadastroUsuarios {
  id     String @id @default(uuid())
  nome   String
  cpf    String @unique
  email  String
  senha  String
  cep    String
  funcionario Boolean @default(true)
  cliente Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  pedidos  CadPedidos []
  idPedidos String?

  @@map("cadastro_usuarios")
}

model CadastroFuncionarios {
  id      String @id @default(uuid())
  nome    String
  cpf     String @unique
  email   String
  senha   String
  cep     String

  hierarquia CadHierarquia @relation(fields: [idHierarquia], references: [id])
  idHierarquia String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("cadastro_funcionarios")
}

model CadastroProdutos {
  id        String   @id @default(uuid())
  nomeProd  String
  descricao String
  precoProd String
  banner String
  created   DateTime @default(now())
  updated   DateTime @updatedAt

  pedidos CadPedidos[]
  @@map("cadastro_produtos")
}

model CadPedidos {
  id         String   @id @default(uuid())
  preco      String
  quantidade String
  created    DateTime @default(now())
  updated    DateTime @updatedAt

  usuario   CadastroUsuarios @relation(fields: [idUsuario], references: [id])
  idUsuario String
  produto CadastroProdutos @relation(fields: [idProdutos], references: [id])
  idProdutos String

  @@map("cadastro_pedido")
}
model Carrinho {
  id          String   @id @default(uuid())
  n_pedido    Int      @unique @default(autoincrement())
  valor_total Decimal? @db.Decimal(9, 2)
  status      String   @default("Aguardando")
  draft       Boolean  @default(true)
  entrega     Boolean  @default(false)
  aceito      Boolean  @default(false)

  itens ItemsCarrinho[]
  cliente Clientes @relation(fields: [id_cliente], references: [id])
  id_cliente String
  

  data_criacao   DateTime @default(now())
  data_alteracao DateTime @updatedAt

  @@map("carrinho")
}

model ItemsCarrinho {
  id         String  @id @default(uuid())
  quantidade Int @default(1)
  valor      Decimal @db.Decimal(9, 2)

  carrinho Carrinho @relation(fields: [id_carrinho], references: [id])
  id_carrinho String
  produtos CadastroProdutos @relation(fields: [id_produto], references: [id])
  id_produto String

  data_criacao   DateTime @default(now())
  data_alteracao DateTime @updatedAt

  @@map("itens_carrinho")
}
model Clientes {
  id          String  @id @default(uuid())
  nome        String
  cpf         String
  email       String
  password    String
  cep         String
  rua         String
  numero      String
  complemento String?
  bairro      String
  cidade      String
  estado      String
  funcionario Boolean @default(true)
  cliente     Boolean @default(false)

  carrinho Carrinho[]

  data_criacao   DateTime @default(now())
  data_alteracao DateTime @updatedAt

  @@map("clientes")
}